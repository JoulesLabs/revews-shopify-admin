version: '3'
services:
    nginx:
        image: nginx:latest
        container_name: rx_nginx
        volumes:
            - ./.docker/nginx/admin/local.conf:/etc/nginx/conf.d/default.conf #api and admin panel
            - ./.docker/nginx/logs:/var/log/nginx
            - ./admin:/var/www/admin
        ports:
          - 8006:80
          #- 443:443 #uncomment when production deploy
          #- 80:80 #uncomment when production deploy
        depends_on:
          - admin
          # - web
        networks:
          - admin_network

    admin:
        build:
          context: .
          dockerfile: .docker/admin/Dockerfile
        container_name: rx_backend
        volumes:
          - ./admin:/var/www/admin
        restart: always
        networks:
          - admin_network

    # database:
    #     image: mysql:8.0
    #     #platform: linux/x86_64 // for mac m1
    #     container_name: rx_database
    #     restart: always
    #     environment:
    #       - MYSQL_DATABASE=${DB_DATABASE}
    #       - MYSQL_PASSWORD=${DB_PASSWORD}
    #       - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    #       - TZ=UTC
    #     volumes:
    #       - ./.docker/data/mysql/data:/var/lib/mysql
    #       #- ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
    #       - ./.docker/mysql/create_admin_db.sql:/docker-entrypoint-initdb.d/create_admin_db.sql
    #     ports:
    #       - ${MYSQL_PORT}:3306
    #     networks:
    #       - admin_network


    database:
        container_name: rx_database
        image: postgres:14
        environment:
          POSTGRES_USER: ${DB_USERNAME}
          POSTGRES_PASSWORD: ${DB_PASSWORD}
          POSTGRES_DB: ${DB_DATABASE}
          PGDATA: /data/postgres
        volumes:
          - pgdata:/data/postgres
          - ./.docker/postgres/create_admin_db.sql:/docker-entrypoint-initdb.d/create_admin_db.sql

        ports:
          - "5433:5432"
        restart: always
        networks:
          - admin_network

    mailhog:
      image: mailhog/mailhog
      container_name: rx_mailhog
      logging:
        driver: 'none'  # disable saving logs
      ports:
        - 1026:1025 # smtp server
        - 8026:8025 # web ui
      networks:
        - admin_network
        
volumes:
  pgdata:
  # database:
  #   driver: local

networks:
  admin_network:
    driver: bridge